<FormView TModel="EumProperty"
          FormData="ModelItem"
          OnSaving="HandleSave"
          OnRefresh="HandleRefresh">
    <FormContent>

        <MudSelect Label="TextOnlyEnumProperty"
                   Variant="Variant.Outlined"
                   @bind-Value="ModelItem.TextOnlyEnumProperty">
            @foreach (TextOnlyEnum item in Enum.GetValues(typeof(TextOnlyEnum)))
            {
                <MudSelectItem Value="@item">@item</MudSelectItem>
            }
        </MudSelect>

        <MudField Label="TextAndImageEnumProperty" Variant="Variant.Outlined" InnerPadding="false">
            <MudRadioGroup @bind-Value="ModelItem.TextAndImageEnumProperty">
                @foreach (TextAndImageEnum item in Enum.GetValues(typeof(TextAndImageEnum)))
                {
                    <MudRadio Value="@item">@item</MudRadio>
                }
            </MudRadioGroup>
        </MudField>

    </FormContent>
</FormView>


@code {
    [Parameter] public Guid Oid { get; set; } = Guid.Empty;
    [CascadingParameter] public required IMudDialogInstance MudDialog { get; set; }
    [Inject] public required ISnackbar Snackbar { get; set; }

    [Inject] public required ISecureStorage SecureStorage { get; set; }
    [Inject] public required ODataClientProvider factory { get; set; }

    EumProperty ModelItem { get; set; } = new();

    ODataClient oDataClient = default!;
    const string apiRouteName = "EumProperty";

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        var token = await SecureStorage.GetValueAsync(SecureStorageSchema.AccessToken);
        if (!string.IsNullOrEmpty(token))
        {
            oDataClient = factory.CreateClient("Setting1", token);
        }
        await OnGetModelItem();
    }

    async Task HandleSave()
    {
        var result = await oDataClient.SaveModelItemAsync<EumProperty>(
            apiRouteName,
            Oid != Guid.Empty ? Oid : Guid.Empty,
            ModelItem
        );
        if (result.isSuccess)
        {
            MudDialog.Close(DialogResult.Ok(true));
        }
        else
        {
            var message = !string.IsNullOrEmpty(result.error) ? result.error : "Unkown error!";
            Snackbar.Add(message, Severity.Error);
        }
        StateHasChanged();
    }

    async Task HandleRefresh()
    {
        await OnGetModelItem();
    }

    private async Task OnGetModelItem()
    {
        ModelItem = await oDataClient.GetModelItemByKeyAsync<EumProperty>(
            apiRouteName,
            Oid != Guid.Empty ? Oid : Guid.Empty);
    }
}
